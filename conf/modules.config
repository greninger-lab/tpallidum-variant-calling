/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: BOWTIE2_BUILD {
        publishDir = [
            path: { "${params.outdir}/bowtie2_idx" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }

    withName: BOWTIE2_BUILD_NO_RRNA {
        publishDir = [
            path: { "${params.outdir}/bowtie2_no_rrna_idx" },
            mode: params.publish_dir_mode,
            pattern: '*'
        ]
    }

    withName: SEQKIT_STATS_RAW {
        ext.prefix = { "${meta.id}.raw" }
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}"                    
        ]
    }

    withName: TRIMMOMATIC {
        ext.args = 'ILLUMINACLIP:/usr/local/share/trimmomatic-0.39-2/adapters/Concatenated.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:20'
        ext.args2 = ''
        publishDir = [
            path: { "${params.outdir}/trimmomatic" },
            mode: params.publish_dir_mode,
            pattern: '*.{paired.trim*.fastq.gz,summary}'
        ]
    }

    withName: SEQKIT_STATS_TRIM {
        ext.prefix = { "${meta.id}.trim" }
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}" 
        ]
    }

    withName: KRAKEN2_REMOVE_HUMAN {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/kraken2_remove_host" },
            mode: params.publish_dir_mode,
            pattern: '*{.txt}'
        ]
    }    

    withName: KRAKEN2_KRAKEN2 {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*.{gz,txt}'
        ]
    }

    withName: KRAKEN2_EXTRACT {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/kraken_extract" },
            mode: params.publish_dir_mode,
            pattern: '*.{gz}'
        ]
    }

    withName: BBDUK_GENOMIC {
        ext.prefix = { "${meta.id}_tp" }
        ext.prefix2 = { "${meta.id}_rna" }
        ext.args = 'k=21 hdist=1'
        publishDir = [
            path: { "${params.outdir}/bbduk_genomic" },
            mode: params.publish_dir_mode,
            pattern: '*{fastq.gz,bbduk.log}'
        ]
    }

    withName: BBDUK_RRNA {
        ext.prefix2 = { "${meta.id}_rRNA" }
        ext.args = 'k=101 rieb=f hdist=0'
        publishDir = [
            path: { "${params.outdir}/bbduk_rrna" },
            mode: params.publish_dir_mode,
            pattern: '*{removed*.fastq.gz,bbduk.log}'
        ]
    }

    withName: BBDUK_TRNA {
        ext.prefix2 = { "${meta.id}_tRNA" }
        ext.args = 'k=51 hdist=0'
        publishDir = [
            path: { "${params.outdir}/bbduk_trna" },
            mode: params.publish_dir_mode,
            pattern: '*{removed*.fastq.gz,bbduk.log}'
        ]
    }

    withName: BOWTIE2_ALIGN_GENOMIC {
        ext.argsold = '--no-unal'
        ext.args = '--no-unal'
        ext.prefix = { "${meta.id}_genomic_sorted" }        
        publishDir = [
            path: { "${params.outdir}/bowtie2_genomic" },
            mode: params.publish_dir_mode,
            pattern: "*{.log}"
        ]        
    }     

    withName: BOWTIE2_ALIGN_RRNA {
        ext.args = '--no-unal'
        ext.prefix = { "${meta.id}_rRNA_sorted" }        
        publishDir = [
            path: { "${params.outdir}/bowtie2_rRNA" },
            mode: params.publish_dir_mode,
            pattern: "*{.log}"
        ]        
    }  

    withName: BOWTIE2_ALIGN_TRNA {
        ext.args = '--no-unal'
        ext.prefix = { "${meta.id}_tRNA_sorted" }        
        publishDir = [
            path: { "${params.outdir}/bowtie2_tRNA" },
            mode: params.publish_dir_mode,
            pattern: "*{.log}"
        ]        
    }  

    withName: SAMTOOLS_MERGE {
        ext.prefix = { "${meta.id}_merged" }        
        publishDir = [
            path: { "${params.outdir}/samtools_merged" },
            mode: params.publish_dir_mode,
            pattern: "*{merged.bam}"
        ]        
    }

    withName: PICARD_MARKDUPLICATES {
        ext.args = '--REMOVE_DUPLICATES true --VALIDATION_STRINGENCY SILENT --READ_NAME_REGEX null'
        ext.prefix = { "${meta.id}_merged_dedup_noRG" }        
        publishDir = [
            path: { "${params.outdir}/markduplicates" },
            mode: params.publish_dir_mode,
            pattern: "*{noRG.bam}"
        ]        
    }

    withName: PICARD_ADDORREPLACEREADGROUPS {
        ext.args = { "--SORT_ORDER coordinate --RGID foo --RGLB bar --RGPL illumina --RGPU unit1 --RGSM ${meta.id} --CREATE_INDEX true" }
        ext.prefix = { "${meta.id}_dedup" }        
        publishDir = [
            path: { "${params.outdir}/addorreplacereadgroups" },
            mode: params.publish_dir_mode,
            pattern: "*{dedup.bam}"
        ]        
    }    

    withName: SUBSAMPLE {      
        publishDir = [
            path: { "${params.outdir}/subsample" },
            mode: params.publish_dir_mode,
            pattern: "*{.bam,.bai}"
        ]        
    }

    withName: IVAR_VARIANT {      
        publishDir = [
            path: { "${params.outdir}/ivar_variant" },
            mode: params.publish_dir_mode,
            pattern: "*{.tsv}"
        ]        
    }

    withName: BEDTOOLS_COVERAGE {      
        publishDir = [
            path: { "${params.outdir}/bedtools_coverage" },
            mode: params.publish_dir_mode,
            pattern: "*{.txt}"
        ]        
    }     

    withName: GATK4_HAPLOTYPECALLER_REMAP {
        ext.args = { "--sample-ploidy 1 --allow-non-unique-kmers-in-ref --indel-size-to-eliminate-in-ref-model 130 -ERC BP_RESOLUTION" }
        ext.prefix = { "${meta.id}_remap.g" }
        publishDir = [
            path: { "${params.outdir}/gatk4_haplotypecaller" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    } 

    withName: REPLACE_PL {      
        publishDir = [
            path: { "${params.outdir}/replace_pl" },
            mode: params.publish_dir_mode,
            pattern: "*{_remap_reheadered.g.vcf}"
        ]        
    }

    withName: GATK4_HAPLOTYPECALLER {
        ext.argsold = { "--sample-ploidy 1 --dont-use-soft-clipped-bases true --read-filter ExcessiveEndClippedReadFilter --max-clipped-bases 30 -ERC GVCF" }
        ext.args = { "--sample-ploidy 1 -ERC GVCF" }
        ext.prefix = { "${meta.id}_unfiltered.g" }
        publishDir = [
            path: { "${params.outdir}/gatk4_haplotypecaller" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }

    withName: GATK4_VARIANTFILTRATION_DEPTH {
        ext.args = { '--filter-name "low_depth" --filter-expression "DP < 5"' }
        ext.prefix = { "${meta.id}_filteredDP5.g" }
        publishDir = [
            path: { "${params.outdir}/gatk4_variantfiltration" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }
    
    withName: GATK4_VARIANTFILTRATION_PHYLO {
        ext.args = { "--mask ${mask} --mask-name 'phylo_mask'" }
        ext.prefix = { "${meta.id}_filtered_masked.g" }
        publishDir = [
            path: { "${params.outdir}/gatk4_variantfiltration" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }    

    withName: GATK4_HAPLOTYPECALLER_CONSENSUS {
        ext.args = { "--sample-ploidy 1 --dont-use-soft-clipped-bases true --read-filter ExcessiveEndClippedReadFilter --max-clipped-bases 30" }
        ext.prefix = { "${meta.id}_unfiltered" }
        publishDir = [
            path: { "${params.outdir}/gatk4_haplotypecaller" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }       

    withName: GATK4_VARIANTFILTRATION_DEPTH_CONSENSUS {
        ext.args = { '--filter-name "low_depth" --filter-expression "DP < 5"' }
        ext.prefix = { "${meta.id}_filteredDP5" }
        publishDir = [
            path: { "${params.outdir}/gatk4_variantfiltration" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }
    
    withName: GATK4_VARIANTFILTRATION_PHYLO_CONSENSUS {
        ext.args = { "--mask ${mask} --mask-name 'phylo_mask'" }
        ext.prefix = { "${meta.id}_filtered_masked" }
        publishDir = [
            path: { "${params.outdir}/gatk4_variantfiltration" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]        
    }  

    withName: GATK4_INDEXFEATUREFILE {
        publishDir = [
            path: { "${params.outdir}/gatk4_indexfeaturefile" },
            mode: params.publish_dir_mode,
            pattern: "*.{tbi,idx}"
        ]           
    }

    withName: GATK4_COMBINEGVCFS {
        ext.prefix = { "01_combined" }
        publishDir = [
            path: { "${params.outdir}/gatk4_combinegvcfs" },
            mode: params.publish_dir_mode,
            pattern: "*{01_combined.g.vcf.gz,01_combined.g.vcf.gz.tbi}"
        ]         
    }    

    withName: GATK4_GENOTYPEGVCFS {
        ext.args = { "-A AlleleFraction" }
        ext.prefix = { "02_unfiltered" }
        publishDir = [
            path: { "${params.outdir}/gatk4_genotypegvcfs" },
            mode: params.publish_dir_mode,
            pattern: "*{02_unfiltered.g.vcf.gz}"
        ]             
    }

    withName: BCFTOOLS_GT_UNFILTERED {
        ext.args = { "+setGT" }
        ext.args2 = { "-- -t q -n . -e '((FORMAT/AD / FORMAT/DP)>${params.variant_af})'" }
        ext.prefix = { "03_genotypesAF08" }
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ]    
    }

    withName: BCFTOOLS_GT_FILTERED_DP {
        ext.args = { "+setGT" }
        ext.args2 = { "-- -t q -n . -i 'FORMAT/DP<${params.variant_dp}'" }
        ext.prefix = { "04_genotypesAF08DP3" }
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ]    
    }

    withName: GATK4_VARIANTFILTRATION_GT_AF08DP3 {
        ext.args = { "--mask ${mask} --mask-name 'phylo_mask'" }
        ext.prefix = { "05_phylomarked" }
        publishDir = [
            path: { "${params.outdir}/gatk4_variantfiltration" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz,.tbi}"
        ]            
    }    

    withName: BCFTOOLS_VIEW_SNP {
        ext.args = { "view -i 'TYPE=\"SNP\"'" }
        ext.prefix = { "06_snps" }
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ]    
    }

    withName: BCFTOOLS_VIEW_FILTER_MASK {
        ext.args = { "view -e 'FILTER=\"phylo_mask\"'" }
        ext.prefix = { "07_masked_snps" }
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ]  
    }    

    withName: GATK4_INDEX_MASKED_SNPS {
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*.{tbi,idx}"
        ]              
    }

    withName: VARIANTS_TO_TABLE_NOCALL {
        ext.args = { "-F POS -GF GT" }
        ext.prefix = { "${meta.id}_count_nocall" }
        publishDir = [
            path: { "${params.outdir}/variants_to_table" },
            mode: params.publish_dir_mode,
            pattern: "*{.txt}"
        ]          
    }

    withName: PERCENT_NO_GENOTYPE {
        publishDir = [
            path: { "${params.outdir}/n25_args" },
            mode: params.publish_dir_mode,
            pattern: "*{.args}"
        ]   
    }

    withName: VARIANTS_TO_N25_SNPS {
        ext.args = { "-F POS -GF GT" }
        ext.prefix = { "N25_SNPs" }
        publishDir = [
            path: { "${params.outdir}/variants_to_table" },
            mode: params.publish_dir_mode,
            pattern: "*{.txt}"
        ]          
    }

   withName: GATK4_SELECTVARIANTS_MASKED_SNPS {
        ext.args = { "--exclude-non-variants" }
        ext.prefix = { "N25_masked_snps" }
        publishDir = [
            path: { "${params.outdir}/select_variants" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ] 
   }

    withName: GATK4_SELECTVARIANTS_PHYLOMARKED {
        ext.args = { "--exclude-non-variants" }
        ext.prefix = { "N25_phylomarked" }
        publishDir = [
            path: { "${params.outdir}/select_variants" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ] 
    }

    withName: SPLIT_VCF {
        publishDir = [
            path: { "${params.outdir}/split_vcfs" },
            mode: params.publish_dir_mode,
            pattern: "*{.vcf.gz}"
        ] 
    }

    withName: VARIANTS_TABLE_FOR_PHYLO {
        ext.args = { "-F POS -F FILTER --show-filtered" }
        ext.prefix = { "for_phylo" }
        publishDir = [
            path: { "${params.outdir}/variants_to_table" },
            mode: params.publish_dir_mode,
            pattern: "*{.txt}"
        ]          
    }

    withName: GENERATE_POS_MASK_BED {
        publishDir = [
            path: { "${params.outdir}/mask_bed" },
            mode: params.publish_dir_mode,
            pattern: "*{.bed}"
        ]     
    }

    withName: MAKE_CHUNKS {
        publishDir = [
            path: { "${params.outdir}/chunks" },
            mode: params.publish_dir_mode,
            pattern: "*{.fasta}"
        ]          
    }

    withName: TABIX_BGZIP {
        ext.prefix = { "${meta.id}_filtered_masked" }
        publishDir = [
            path: { "${params.outdir}/tabix" },
            mode: params.publish_dir_mode,
            pattern: "*{vcf.gz}"
        ]        
    }  

    withName: TABIX_TABIX {
        ext.args = "-p vcf"
        ext.prefix = { "${meta.id}_filtered_masked" }
        publishDir = [
            path: { "${params.outdir}/tabix" },
            mode: params.publish_dir_mode,
            pattern: "*{.tbi,.idx}"
        ]        
    }

    withName: BCFTOOLS_CONSENSUS {
        ext.prefix = { "${meta.id}_consensus" }
        publishDir = [
            path: { "${params.outdir}/bcftools" },
            mode: params.publish_dir_mode,
            pattern: "*{.fa}"
        ]        
    }

    withName: SUMMARY {
        publishDir = [
            path: { "${params.outdir}/summary" },
            mode: params.publish_dir_mode,
            pattern: "*{.tsv}"
        ]        
    }

	withName: SUMMARY_FINAL {
		publishDir = [
			path: { "${params.outdir}" },
			mode: params.publish_dir_mode,
			pattern: "*.tsv"
		]
	}    

/*
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
*/
}
